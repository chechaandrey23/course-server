import { UsersService } from '../entries/users/users.service';
import { RolesService } from '../entries/roles/roles.service';
import { ThemesService } from '../entries/themes/themes.service';
import { LangsService } from '../entries/langs/langs.service';
import { UserInfosService } from '../entries/userinfos/userinfos.service';
import { GroupsService } from '../entries/groups/groups.service';
import { TitlesService } from '../entries/titles/titles.service';
import { ReviewsService } from '../entries/reviews/reviews.service';
import { ImagesService } from '../entries/images/images.service';
import { TagsService } from '../entries/tags/tags.service';
import { RatingsService } from '../entries/ratings/ratings.service';
import { LikesService } from '../entries/likes/likes.service';
import { CommentsService } from '../entries/comments/comments.service';
import { SearchReviewService } from '../entries/reviews/search.review.service';
import { SearchCommentService } from '../entries/comments/search.comment.service';
import { IdDTO } from '../dto/id.dto';
import { PageDTO } from '../dto/page.dto';
import { ReviewsFilterExtDTO } from '../dto/reviews.filter.ext.dto';
import { UserInfoEditWithoutDTO } from '../dto/userinfo.edit.without.dto';
import { RatingAddWithoutDTO } from '../dto/rating.add.without.dto';
import { LikeAddWithoutDTO } from '../dto/like.add.without.dto';
import { SearchDTO } from '../dto/search.dto';
import { CommentsDTO } from '../dto/comments.dto';
import { CommentsAutoUpdateDTO } from '../dto/comments.autoupdate.dto';
import { CommentAddWithoutDTO } from '../dto/comment.add.without.dto';
import { CommentEditWithoutDTO } from '../dto/comment.edit.without.dto';
export declare class UserController {
    private users;
    private roles;
    private langs;
    private themes;
    private userInfos;
    private groups;
    private titles;
    private reviews;
    private images;
    private tags;
    private ratings;
    private likes;
    private comments;
    private searchReview;
    private searchComment;
    constructor(users: UsersService, roles: RolesService, langs: LangsService, themes: ThemesService, userInfos: UserInfosService, groups: GroupsService, titles: TitlesService, reviews: ReviewsService, images: ImagesService, tags: TagsService, ratings: RatingsService, likes: LikesService, comments: CommentsService, searchReview: SearchReviewService, searchComment: SearchCommentService);
    protected readonly countRows: number;
    getDescriptionOrderReviews(req: any, reviewsFilterExtDTO: ReviewsFilterExtDTO): Promise<import("../entries/reviews/review.model").Review[]>;
    getFullReview(req: any, idDTO: IdDTO): Promise<import("../entries/reviews/review.model").Review>;
    getUserObject(req: any): Promise<import("../entries/users/user.model").User>;
    setUserSettings(req: any, userInfoEditWithoutDTO: UserInfoEditWithoutDTO): Promise<import("../entries/userinfos/userinfo.model").UserInfo>;
    getUserLangAll(): Promise<import("../entries/langs/lang.model").Lang[]>;
    getUserThemeAll(): Promise<import("../entries/themes/theme.model").Theme[]>;
    serUserRating(req: any, ratingAddWithoutDTO: RatingAddWithoutDTO): Promise<import("../entries/ratings/rating.model").Rating>;
    serUserLike(req: any, likeAddWithoutDTO: LikeAddWithoutDTO): Promise<import("../entries/likes/like.model").Like>;
    getComments(req: any, commentsDTO: CommentsDTO): Promise<import("../entries/comments/comment.model").Comment[]>;
    autoUpdateComments(req: any, commentsAutoUpdateDTO: CommentsAutoUpdateDTO): Promise<import("../entries/comments/comment.model").Comment[]>;
    newComment(req: any, commentAddWithoutDTO: CommentAddWithoutDTO): Promise<any>;
    editComment(req: any, commentEditWithoutDTO: CommentEditWithoutDTO): Promise<any>;
    removeComment(req: any, idDTO: IdDTO): Promise<{
        id: number;
        deletedAt: string;
    }>;
    getReviewSearchAll(req: any, searchDTO: SearchDTO, pageDTO: PageDTO): Promise<import("../entries/reviews/review.model").Review[]>;
}
